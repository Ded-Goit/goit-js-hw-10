{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// Описаний в документації імпорт бібліотеки\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n//Отримуємо дані з форми\nconst form = document.querySelector('.form'); //Находим HTML-элемент формы и сохраняем его в переменной form.\n//Добавляем обработчик события submit на форму.\nform.addEventListener('submit', event => {\n  event.preventDefault(); //отменяем стандартное поведение формы (перезагрузку страницы).\n  const delay = parseInt(form.elements.delay.value); //получаем значение из поля ввода с именем delay, преобразуя в целое число\n  const state = form.elements.state.value; //получаем значение из выпадающего списка state, которое может быть fulfilled (успех) или rejected (ошибка).\n  // Створюємо проміс\n  /**setTimeout откладывает выполнение на указанное время delay.\n   * В зависимости от значения state:\n   * Если fulfilled, вызывается resolve(delay), что означает успешное выполнение промиса.\n   * Если rejected, вызывается reject(delay), что означает ошибку. */\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  });\n  //Обробляємо результат промісу\n  /**Если промис успешно выполнился (resolve), то вызывается .then().\n   * Внутри then() используется iziToast.success(),\n   * который показывает всплывающее уведомление с зеленым цветом и сообщением о том,\n   *  что промис выполнен за delay миллисекунд. */\n  promise\n    .then(delay => {\n      iziToast.success({\n        title: 'Succes',\n        message: `✅ Fulfilled promise in ${delay}ms`,\n      });\n    })\n    /**Если промис завершился с ошибкой (reject), вызывается .catch().\n     * Внутри catch() используется iziToast.error(),\n     * который показывает всплывающее уведомление с красным цветом и текстом о том,\n     * что промис отклонен через delay миллисекунд. */\n    .catch(delay => {\n      iziToast.error({\n        title: 'Error',\n        message: `❌ Rejected promise in ${delay}ms`,\n      });\n    });\n  form.reset(); //очищаем все поля формы после отправки.\n});\n"],"names":["form","event","delay","state","resolve","reject","iziToast"],"mappings":"oFAKA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAUC,GAAS,CACvCA,EAAM,eAAc,EACpB,MAAMC,EAAQ,SAASF,EAAK,SAAS,MAAM,KAAK,EAC1CG,EAAQH,EAAK,SAAS,MAAM,MAMlB,IAAI,QAAQ,CAACI,EAASC,IAAW,CAC/C,WAAW,IAAM,CACXF,IAAU,YACZC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EAOE,KAAKA,GAAS,CACbI,EAAS,QAAQ,CACf,MAAO,SACP,QAAS,0BAA0BJ,CAAK,IAChD,CAAO,CACP,CAAK,EAKA,MAAMA,GAAS,CACdI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,yBAAyBJ,CAAK,IAC/C,CAAO,CACP,CAAK,EACHF,EAAK,MAAK,CACZ,CAAC"}